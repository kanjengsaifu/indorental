<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Users_m');
    } 

    /*
     * Listing of user
     */
    function index()
    {
        $data['user'] = $this->Users_m->get_all_user();
        $data['_view'] = 'admin/user/index';
        $this->template->load('admin/adminTemplate','admin/user/index',$data);
    }

    /*
     * Adding a new user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required|max_length[32]');
		$this->form_validation->set_rules('id','ID','required|integer');
		$this->form_validation->set_rules('nama_lengkap','Nama Lengkap','required|max_length[50]');
		$this->form_validation->set_rules('username','Username','required|max_length[40]');
		$this->form_validation->set_rules('id_level_user','Id Level User','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_level_user' => $this->input->post('id_level_user'),
				'password' => $this->input->post('password'),
				'nama_lengkap' => $this->input->post('nama_lengkap'),
				'username' => $this->input->post('username'),
            );
            
            $user_id = $this->Users_m->add_user($params);
            redirect('user/index');
        }
        else
        {
			$this->load->model('Users_m');
			$data['all_level_user'] = $this->Users_m->get_level();
            
            $data['_view'] = 'admin/user/add';
            $this->template->load('admin/adminTemplate','admin/user/index',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($id)
    {   
        // check if the user exists before trying to edit it
        $data['user'] = $this->Users_m->get_user($id);
        
        if(isset($data['user']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','required|max_length[32]');
			$this->form_validation->set_rules('id','ID','required|integer');
			$this->form_validation->set_rules('nama_lengkap','Nama Lengkap','required|max_length[50]');
			$this->form_validation->set_rules('username','Username','required|max_length[40]');
			$this->form_validation->set_rules('id_level_user','Id Level User','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_level_user' => $this->input->post('id_level_user'),
					'password' => $this->input->post('password'),
					'nama_lengkap' => $this->input->post('nama_lengkap'),
					'username' => $this->input->post('username'),
                );

                $this->Users_m->update_user($id,$params);            
                redirect('user/index');
            }
            else
            {
				$this->load->model('Level_user_model');
				$data['all_level_user'] = $this->Level_user_model->get_all_level_user();

                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($id)
    {
        $user = $this->Users_m->get_user($id);

        // check if the user exists before trying to delete it
        if(isset($user['id']))
        {
            $this->Users_m->delete_user($id);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
}