<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
class Barang extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Barang_m');
    } 

    /*
     * Listing of barang
     */
    function index()
    {
        $data['barang'] = $this->Barang_m->get_all_barang();
        $data['all_kategori'] = $this->Barang_m->get_kategori();
        $data['all_spek'] = $this->Barang_m->get_spek();
        $data['_view'] = 'gudang/barang/index';
        $this->template->load('gudang/adminTemplate','gudang/barang/index',$data);
    }

    // function edit($id_barang)
    // {
    //     $data['barang'] = $this->Barang_m->get_all_barang();
    //     $data['all_kategori'] = $this->Barang_m->get_kategori();
    //     $data['all_spek'] = $this->Barang_m->get_spek();
    //     $data['_view'] = 'gudang/barang/edit';
    //     $this->template->load('gudang/adminTemplate','gudang/barang/edit',$data);
    // }

    /*
     * Adding a new barang
     */
    function add()
    {   
        
    $this->load->library('form_validation');
    $this->form_validation->set_rules('kategori','Kategori','required|max_length[25]');
    $this->form_validation->set_rules('spek','Spek','required|max_length[25]');
    $this->form_validation->set_rules('serial_no','Serial No','required|max_length[25]');
    $this->form_validation->set_rules('nama_barang','Nama Barang','required|max_length[50]');
    $this->form_validation->set_rules('kondisi','Kondisi','required|max_length[15]');
    $this->form_validation->set_rules('status','Status','required|max_length[15]');
    $this->form_validation->set_rules('barcode','Barcode','required');
    $this->form_validation->set_rules('id_spek','Id Spek','required');
    
    if($this->form_validation->run())     
        {   
            $params = array(
        'kategori' => $this->input->post('kategori'),
        'spek' => $this->input->post('spek'),
        'id_kategori' => $this->input->post('id_kategori'),
        'id_spek' => $this->input->post('id_spek'),
        'serial_no' => $this->input->post('serial_no'),
        'nama_barang' => $this->input->post('nama_barang'),
        'kondisi' => $this->input->post('kondisi'),
        'status' => $this->input->post('status'),
        'barcode' => $this->input->post('barcode'),
            );
            
            $barang_id = $this->Barang_m->add_barang($params);
            redirect('gudang/barang/index');
        }
        else
        {
      $this->load->model('Kategori_m');
      $data['all_kategori'] = $this->Kategori_m->get_all_kategori();

      $this->load->model('Spek_m');
      $data['all_spek'] = $this->Spek_m->get_all_spek();
            
      $data['_view'] = 'barang/add';
      $this->template->load('gudang/adminTemplate','gudang/barang/index',$data);
        }
    }  

    /*
     * Editing a barang
     */
    function edit($id_barang)
    {   
        // check if the barang exists before trying to edit it
        $data['barang'] = $this->Barang_m->get_barang($id_barang);
        $this->load->model('Kategori_m');
        $data['all_kategori'] = $this->Kategori_m->get_all_kategori();
        $this->load->model('Spek_m');
        $data['all_spek'] = $this->Spek_m->get_all_spek();
        $data['_view'] = 'gudang/barang/edit';
        $this->template->load('gudang/adminTemplate','gudang/barang/edit',$data);
    } 

    /*
     * Deleting barang
     */
    function remove($id_barang)
    {
        $barang = $this->Barang_m->get_barang($id_barang);

        // check if the barang exists before trying to delete it
        if(isset($barang['id_barang']))
        {
            $this->Barang_m->delete_barang($id_barang);
            redirect('gudang/barang/index');
        }
        else
            show_error('The barang you are trying to delete does not exist.');
    }

   function simpan()
   {
        $id_barang=$this->input->post('id_barang');
        $id_kategori=$this->input->post('id_kategori');
        $id_spek=$this->input->post('id_spek');
        $nama_barang=$this->input->post('nama_barang');
        $serial_no=$this->input->post('serial_no');
        $kondisi=$this->input->post('kondisi');
        $status=$this->input->post('status');

        $this->load->library('ciqrcode'); //pemanggilan library QR CODE

        $config['cacheable']  = true; //boolean, the default is true
        $config['cachedir']   = './assets/'; //string, the default is application/cache/
        $config['errorlog']   = './assets/'; //string, the default is application/logs/
        $config['imagedir']   = './assets/barcode/'; //direktori penyimpanan qr code
        $config['quality']    = true; //boolean, the default is true
        $config['size']     = '1024'; //interger, the default is 1024
        $config['black']    = array(224,255,255); // array, default is array(255,255,255)
        $config['white']    = array(70,130,180); // array, default is array(0,0,0)
        $this->ciqrcode->initialize($config);

        $image_name=$serial_no.'.png'; //buat name dari qr code sesuai dengan nim

        $params['data'] = $serial_no; //data yang akan di jadikan QR CODE
        $params['level'] = 'H'; //H=High
        $params['size'] = 10;
        $params['savename'] = FCPATH.$config['imagedir'].$image_name; //simpan image QR CODE ke folder assets/images/
        $this->ciqrcode->generate($params); // fungsi untuk generate QR CODE

        $this->Barang_m->save_barang($id_kategori,$id_spek,$serial_no,$nama_barang,$kondisi,$status,$image_name); //simpan ke database
        redirect('gudang/barang/index'); //redirect ke mahasiswa usai simpan data
  }

  function simpan_update($id_barang)
   {
        $id_barang=$this->input->post('id_barang');
        $id_kategori=$this->input->post('id_kategori');
        $id_spek=$this->input->post('id_spek');
        $nama_barang=$this->input->post('nama_barang');
        $serial_no=$this->input->post('serial_no');
        $kondisi=$this->input->post('kondisi');
        $status=$this->input->post('status');

        $this->load->library('ciqrcode'); //pemanggilan library QR CODE

        $config['cacheable']  = true; //boolean, the default is true
        $config['cachedir']   = './assets/'; //string, the default is application/cache/
        $config['errorlog']   = './assets/'; //string, the default is application/logs/
        $config['imagedir']   = './assets/barcode/'; //direktori penyimpanan qr code
        $config['quality']    = true; //boolean, the default is true
        $config['size']     = '1024'; //interger, the default is 1024
        $config['black']    = array(224,255,255); // array, default is array(255,255,255)
        $config['white']    = array(70,130,180); // array, default is array(0,0,0)
        $this->ciqrcode->initialize($config);

        $image_name=$serial_no.'.png'; //buat name dari qr code sesuai dengan nim

        $params['data'] = $serial_no; //data yang akan di jadikan QR CODE
        $params['level'] = 'H'; //H=High
        $params['size'] = 10;
        $params['savename'] = FCPATH.$config['imagedir'].$image_name; //simpan image QR CODE ke folder assets/images/
        $this->ciqrcode->generate($params); // fungsi untuk generate QR CODE
        $this->Barang_m->save_update($id_barang,$id_kategori,$id_spek,$serial_no,$nama_barang,$kondisi,$status,$image_name); //simpan ke database
        redirect('gudang/barang/index'); 
  }
        
}
